// this class belongs to network package
package Network;

// import our classes
import Controller.ActionListener.MainController;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

/***
 * This class manages the network connection of the reservation
 */
public class ReservesSocketThread extends Thread{

    // instance attributes
    private DedicatedReservesThread dedicatedReservesThread;
    private MainController mainController;

    // client socket
    private Socket sClient;

    /***
     * This method is generated by the thread start
     */
    @Override
    public void run() {
        try {

            // create our server socket
            ServerSocket serverSocket = new ServerSocket(33334);

            // wait for the connection from a user, and create a dedicated server each time it's connected
            while (true){
                sClient = serverSocket.accept();
                if (sClient.isConnected()) {
                    generaNouServidorDedicat(sClient);
                }
            }
        } catch (IOException e) { // manage exception
            // TODO: manage exception
            e.printStackTrace();
        }
    }

    /***
     * This function generates a new dedicated server
     * @param sClient
     */
    private void generaNouServidorDedicat(Socket sClient){

        System.out.println("Generant nou socket per a la recepcio");
        dedicatedReservesThread = new DedicatedReservesThread(sClient, mainController);
        // run the new thread
        dedicatedReservesThread.start();
    }


    /***
     * This method register the main controller and make it's connection
     * @param mainController MainController that controls the server
     */
    public void addMainController(MainController mainController) {
        this.mainController = mainController;
    }
}
